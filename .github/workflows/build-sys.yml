
name: build-sys

on:
  workflow_dispatch:
    inputs:
      qemu_arch:
        description: 'QEMU system target platform'
        required: true
        default: 'aarch64'
      qemu_mach:
        description: 'QEMU system target machine'
        required: true
        default: 'virt'
      qemu_cpu:
        description: 'QEMU system target CPU'
        required: true
        default: 'cortex-a53'
      deb_arch:
        description: 'DEBIAN system platform'
        required: true
        default: 'arm64'
      timeout:
        description: 'Build time in minutes before machine is powered off'
        default: '60'
      sys_size:
        description: 'Total system disks size in GBi'
        default: '1.5'
  # push:
  #   branches:
  #     - master

env:
  QEMU_ARCH: ${{ github.event.inputs.qemu_arch || vars.QEMU_ARCH }}
  QEMU_MACH: ${{ github.event.inputs.qemu_mach || vars.QEMU_MACH }}
  QEMU_CPU: ${{ github.event.inputs.qemu_cpu || vars.QEMU_CPU }}
  DEB_ARCH: ${{ github.event.inputs.deb_arch || vars.DEB_ARCH }}
  TIMEOUT: ${{ github.event.inputs.timeout || vars.TIMEOUT }}
  SYS_SIZE: ${{ github.event.inputs.sys_size || vars.SYS_SIZE }}
  BOOTPATH: boot
  GITHUB_CONTEXT: ${{ toJson(github) }}
  REPO_NAME: ${{ github.event.repository.name }}
  REPO_OWNER: ${{ github.repository_owner }}

jobs:
  build-sys:
    runs-on: ubuntu-latest
    steps:
      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Install QEMU, libvirt
        run: |
          wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(grep -oP '(?<=UBUNTU_CODENAME=).*' /etc/os-release || lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
          qemu-system-$(echo ${{ env.QEMU_ARCH }}|sed 's/_/-/') libvirt-daemon-system ebtables libguestfs-tools vagrant ruby-fog-libvirt virtinst qemu-utils
          sudo usermod -a -G libvirt,kvm "$USER"
          # sudo usermod -a -G docker libvirt-qemu
          id libvirt-qemu
          sudo setfacl -m u:libvirt-qemu:rwx /home/runner
          sudo getfacl -e /home/runner
          ls -ld /home/runner
          # chgrp -R docker /home/runner/work
          # sudo systemctl restart libvirtd
          # sudo -u libvirt-qemu ls -lR /home/runner/work
      - name: Build system image
        timeout-minutes: ${{ fromJSON(env.TIMEOUT) }}
        shell: sudo -s -u runner source {0}
        run: |
          id
          vagrant plugin install vagrant-libvirt
          ./fetch-kernel ${{ env.DEB_ARCH }}|tee fetch.log
          DEBIAN_INITRD_DATE="$(cat fetch.log|sed -n 's/.*DEBIAN_INITRD_DATE=\([0-9]\+\).*/\1/p'|tr -d '\n')"
          IMAGE_SUBVERSION="${DEBIAN_INITRD_DATE}${{ github.run_number }}"
          export BOOTPATH="${{ env.BOOTPATH }}"
          touch sys.log
          screen -L -Logfile sys.log -DmS build-sys ./build-sys ${{ env.QEMU_ARCH }} ${{ env.QEMU_MACH }} ${{ env.QEMU_CPU }} ${{ env.TIMEOUT }} ${{ env.SYS_SIZE }} ${IMAGE_SUBVERSION} &
          BUILDPID=$!
          tail --pid=$BUILDPID -f sys.log
          IMAGE_VERSION="$(cat sys.log|sed -n 's/.*DEBIAN_IMAGE_VERSION=\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p'|tr -d '\n')"
          echo "IMAGE_VERSION=${IMAGE_VERSION}"|tee -a "${{ github.env }}"
          echo cat "${{ github.env }}"
          cat "${{ github.env }}"
          sudo chown -R "$USER" "${{ env.BOOTPATH }}"
      - name: Build QEMU image
        run: ./build-qemu
      - name: Upload QEMU image
        uses: actions/upload-artifact@v4
        with:
          name: debian-stable-qemu-${{ env.DEB_ARCH }}
          path: image-qemu/*
      - name: Upload QEMU MD5SUMS
        uses: actions/upload-artifact@v4
        with:
          name: debian-stable-qemu-${{ env.DEB_ARCH }}-md5
          path: image-qemu/MD5SUMS
      - name: Build Vagrant image
        run: ./build-vagrant
      - name: Upload VAGRANT image
        uses: actions/upload-artifact@v4
        with:
          name: debian-stable-vagrant-${{ env.DEB_ARCH }}
          path: image-vagrant/*
      - name: Upload VAGRANT MD5SUMS
        uses: actions/upload-artifact@v4
        with:
          name: debian-stable-vagrant-${{ env.DEB_ARCH }}-md5
          path: image-vagrant/MD5SUMS
      - name: Upload VAGRANT image to Vagrant Cloud
        env:
          HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
          HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
          VAGRANT_USER: ${{ secrets.VAGRANT_USER }}
          VAGRANT_ACCESS_TOKEN: ${{ secrets.VAGRANT_ACCESS_TOKEN }}
        run: ./upload-vagrant ${{ env.IMAGE_VERSION }}
